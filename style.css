* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html, 
body {
  --black: hsl(240, 6%, 13%); /* ( -- ) usado para criar VARIAVEL */
  --grey: hsl(240, 9%, 89%); /* hsl=>propriedade */

  height: 100%;
  font-family: 'Roboto', sans-serif;
  -webkit-font-smoothing: antialiased;
}
body {
  display: grid;
  place-items: center;
}
main {
  /* background: url(images/background.svg); */
  background: url(images/background02.png);
  background-repeat: no-repeat;
  background-size: cover;
  width: 375px;
  height: 100vh; /* vw | vh => unidade de medida de view-height(visualização no navegador), 1/100% da tela */
}

.container {
  max-width: 250px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  color: var(--grey);
}

.avatar {
  width: 10rem;
  margin: 11.5rem auto 0;
  position: relative; /* todas as posições dentro dele terão por basedas ele */
}
.avatar span {
  position: absolute;
  top: -15px;
  z-index: 1; /* ao usar o clip-path a img veio para frente, para contornar pode ser usado o z-index(profundidade do objeto) */
}
.avatar > img { /* o que tiver dentro de avatar que for diretamente uma img sofrerá esses estilos */
  width: 10rem;
  height: 11.5rem;
  object-fit: cover;
  clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);
}

h1 {
  font-size: 1.5rem;
  margin-top: 1.5rem;
}
a {
  color: lightgray;
  text-decoration: none;
  margin-top: 0.25rem;
  gap: 0.75rem;
}
p {
  margin-top: 2rem;
}
ul {
  margin-top: 4rem;
  list-style: none; /* estilo de lista(MARCADORES)=>nenhum */
  padding: 0; /* preenchimento interno */
  display: flex; /* um fique ao lado do outro no main(eixo X-horizontal) */
  gap: 0.5rem; /* espaçamento entre os elementos */
  justify-content: center; /* somente usado pq usei o display:FLEX ou GRID */
  align-items: center;
}